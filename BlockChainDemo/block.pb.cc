// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: block.proto

#include "block.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class inputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<input>
      _instance;
} _input_default_instance_;
class outputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<output>
      _instance;
} _output_default_instance_;
class transactionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<transaction>
      _instance;
} _transaction_default_instance_;
class blockheaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<blockheader>
      _instance;
} _blockheader_default_instance_;
class blockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<block>
      _instance;
} _block_default_instance_;
namespace protobuf_block_2eproto {
void InitDefaultsinputImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_input_default_instance_;
    new (ptr) ::input();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::input::InitAsDefaultInstance();
}

void InitDefaultsinput() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsinputImpl);
}

void InitDefaultsoutputImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_output_default_instance_;
    new (ptr) ::output();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::output::InitAsDefaultInstance();
}

void InitDefaultsoutput() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsoutputImpl);
}

void InitDefaultstransactionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_block_2eproto::InitDefaultsinput();
  protobuf_block_2eproto::InitDefaultsoutput();
  {
    void* ptr = &::_transaction_default_instance_;
    new (ptr) ::transaction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::transaction::InitAsDefaultInstance();
}

void InitDefaultstransaction() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultstransactionImpl);
}

void InitDefaultsblockheaderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_blockheader_default_instance_;
    new (ptr) ::blockheader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::blockheader::InitAsDefaultInstance();
}

void InitDefaultsblockheader() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsblockheaderImpl);
}

void InitDefaultsblockImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_block_2eproto::InitDefaultsblockheader();
  protobuf_block_2eproto::InitDefaultstransaction();
  {
    void* ptr = &::_block_default_instance_;
    new (ptr) ::block();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::block::InitAsDefaultInstance();
}

void InitDefaultsblock() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsblockImpl);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::input, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::input, pretx_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::output, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::output, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::output, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::output, addr_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::transaction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::transaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::transaction, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::transaction, versign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::transaction, pubkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::transaction, txhash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::transaction, in_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::transaction, out_),
  4,
  0,
  1,
  2,
  ~0u,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blockheader, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blockheader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blockheader, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blockheader, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blockheader, merkleroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::blockheader, target_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::block, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::block, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::block, txs_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::input)},
  { 7, 14, sizeof(::output)},
  { 16, 27, sizeof(::transaction)},
  { 33, 42, sizeof(::blockheader)},
  { 46, 53, sizeof(::block)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_input_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_output_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_transaction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_blockheader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_block_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "block.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013block.proto\"\026\n\005input\022\r\n\005pretx\030\001 \002(\t\"%\n"
      "\006output\022\r\n\005value\030\001 \002(\003\022\014\n\004addr\030\002 \002(\t\"v\n\013"
      "transaction\022\014\n\004time\030\001 \002(\003\022\017\n\007versign\030\002 \002"
      "(\t\022\016\n\006pubkey\030\003 \002(\t\022\016\n\006txhash\030\004 \002(\t\022\022\n\002in"
      "\030\005 \003(\0132\006.input\022\024\n\003out\030\006 \002(\0132\007.output\"N\n\013"
      "blockheader\022\014\n\004time\030\001 \002(\003\022\r\n\005nonce\030\002 \002(\003"
      "\022\022\n\nmerkleroot\030\003 \002(\t\022\016\n\006target\030\004 \002(\t\"@\n\005"
      "block\022\034\n\006header\030\001 \002(\0132\014.blockheader\022\031\n\003t"
      "xs\030\002 \003(\0132\014.transaction"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 342);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "block.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_block_2eproto

// ===================================================================

void input::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int input::kPretxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

input::input()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_block_2eproto::InitDefaultsinput();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:input)
}
input::input(const input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pretx_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pretx()) {
    pretx_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pretx_);
  }
  // @@protoc_insertion_point(copy_constructor:input)
}

void input::SharedCtor() {
  _cached_size_ = 0;
  pretx_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

input::~input() {
  // @@protoc_insertion_point(destructor:input)
  SharedDtor();
}

void input::SharedDtor() {
  pretx_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void input::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* input::descriptor() {
  ::protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const input& input::default_instance() {
  ::protobuf_block_2eproto::InitDefaultsinput();
  return *internal_default_instance();
}

input* input::New(::google::protobuf::Arena* arena) const {
  input* n = new input;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void input::Clear() {
// @@protoc_insertion_point(message_clear_start:input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!pretx_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*pretx_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:input)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string pretx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pretx()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pretx().data(), static_cast<int>(this->pretx().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "input.pretx");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:input)
  return false;
#undef DO_
}

void input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string pretx = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pretx().data(), static_cast<int>(this->pretx().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "input.pretx");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pretx(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:input)
}

::google::protobuf::uint8* input::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string pretx = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pretx().data(), static_cast<int>(this->pretx().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "input.pretx");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pretx(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:input)
  return target;
}

size_t input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:input)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string pretx = 1;
  if (has_pretx()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pretx());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:input)
  GOOGLE_DCHECK_NE(&from, this);
  const input* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const input>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:input)
    MergeFrom(*source);
  }
}

void input::MergeFrom(const input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pretx()) {
    set_has_pretx();
    pretx_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pretx_);
  }
}

void input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void input::CopyFrom(const input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool input::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void input::Swap(input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void input::InternalSwap(input* other) {
  using std::swap;
  pretx_.Swap(&other->pretx_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata input::GetMetadata() const {
  protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void output::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int output::kValueFieldNumber;
const int output::kAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

output::output()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_block_2eproto::InitDefaultsoutput();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:output)
}
output::output(const output& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_addr()) {
    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:output)
}

void output::SharedCtor() {
  _cached_size_ = 0;
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = GOOGLE_LONGLONG(0);
}

output::~output() {
  // @@protoc_insertion_point(destructor:output)
  SharedDtor();
}

void output::SharedDtor() {
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void output::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* output::descriptor() {
  ::protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const output& output::default_instance() {
  ::protobuf_block_2eproto::InitDefaultsoutput();
  return *internal_default_instance();
}

output* output::New(::google::protobuf::Arena* arena) const {
  output* n = new output;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void output::Clear() {
// @@protoc_insertion_point(message_clear_start:output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!addr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*addr_.UnsafeRawStringPointer())->clear();
  }
  value_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool output::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:output)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string addr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->addr().data(), static_cast<int>(this->addr().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "output.addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:output)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:output)
  return false;
#undef DO_
}

void output::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 value = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->value(), output);
  }

  // required string addr = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addr().data(), static_cast<int>(this->addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "output.addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->addr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:output)
}

::google::protobuf::uint8* output::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 value = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->value(), target);
  }

  // required string addr = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addr().data(), static_cast<int>(this->addr().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "output.addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->addr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:output)
  return target;
}

size_t output::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:output)
  size_t total_size = 0;

  if (has_addr()) {
    // required string addr = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr());
  }

  if (has_value()) {
    // required int64 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value());
  }

  return total_size;
}
size_t output::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:output)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string addr = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->addr());

    // required int64 value = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void output::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:output)
  GOOGLE_DCHECK_NE(&from, this);
  const output* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const output>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:output)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:output)
    MergeFrom(*source);
  }
}

void output::MergeFrom(const output& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:output)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_addr();
      addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_ = from.value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void output::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void output::CopyFrom(const output& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool output::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void output::Swap(output* other) {
  if (other == this) return;
  InternalSwap(other);
}
void output::InternalSwap(output* other) {
  using std::swap;
  addr_.Swap(&other->addr_);
  swap(value_, other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata output::GetMetadata() const {
  protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void transaction::InitAsDefaultInstance() {
  ::_transaction_default_instance_._instance.get_mutable()->out_ = const_cast< ::output*>(
      ::output::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int transaction::kTimeFieldNumber;
const int transaction::kVersignFieldNumber;
const int transaction::kPubkeyFieldNumber;
const int transaction::kTxhashFieldNumber;
const int transaction::kInFieldNumber;
const int transaction::kOutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

transaction::transaction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_block_2eproto::InitDefaultstransaction();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:transaction)
}
transaction::transaction(const transaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      in_(from.in_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  versign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_versign()) {
    versign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.versign_);
  }
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pubkey()) {
    pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
  }
  txhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_txhash()) {
    txhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txhash_);
  }
  if (from.has_out()) {
    out_ = new ::output(*from.out_);
  } else {
    out_ = NULL;
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:transaction)
}

void transaction::SharedCtor() {
  _cached_size_ = 0;
  versign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&out_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&out_)) + sizeof(time_));
}

transaction::~transaction() {
  // @@protoc_insertion_point(destructor:transaction)
  SharedDtor();
}

void transaction::SharedDtor() {
  versign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pubkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete out_;
}

void transaction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* transaction::descriptor() {
  ::protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const transaction& transaction::default_instance() {
  ::protobuf_block_2eproto::InitDefaultstransaction();
  return *internal_default_instance();
}

transaction* transaction::New(::google::protobuf::Arena* arena) const {
  transaction* n = new transaction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void transaction::Clear() {
// @@protoc_insertion_point(message_clear_start:transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  in_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!versign_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*versign_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!pubkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pubkey_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!txhash_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*txhash_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(out_ != NULL);
      out_->Clear();
    }
  }
  time_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool transaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:transaction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string versign = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_versign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->versign().data(), static_cast<int>(this->versign().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transaction.versign");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string pubkey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pubkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pubkey().data(), static_cast<int>(this->pubkey().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transaction.pubkey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string txhash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_txhash()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->txhash().data(), static_cast<int>(this->txhash().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transaction.txhash");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .input in = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_in()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .output out = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:transaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:transaction)
  return false;
#undef DO_
}

void transaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 time = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // required string versign = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->versign().data(), static_cast<int>(this->versign().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transaction.versign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->versign(), output);
  }

  // required string pubkey = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pubkey().data(), static_cast<int>(this->pubkey().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transaction.pubkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pubkey(), output);
  }

  // required string txhash = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->txhash().data(), static_cast<int>(this->txhash().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transaction.txhash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->txhash(), output);
  }

  // repeated .input in = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->in_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->in(static_cast<int>(i)), output);
  }

  // required .output out = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->out_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:transaction)
}

::google::protobuf::uint8* transaction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 time = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // required string versign = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->versign().data(), static_cast<int>(this->versign().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transaction.versign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->versign(), target);
  }

  // required string pubkey = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pubkey().data(), static_cast<int>(this->pubkey().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transaction.pubkey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pubkey(), target);
  }

  // required string txhash = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->txhash().data(), static_cast<int>(this->txhash().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transaction.txhash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->txhash(), target);
  }

  // repeated .input in = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->in_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->in(static_cast<int>(i)), deterministic, target);
  }

  // required .output out = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->out_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transaction)
  return target;
}

size_t transaction::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:transaction)
  size_t total_size = 0;

  if (has_versign()) {
    // required string versign = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->versign());
  }

  if (has_pubkey()) {
    // required string pubkey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pubkey());
  }

  if (has_txhash()) {
    // required string txhash = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->txhash());
  }

  if (has_out()) {
    // required .output out = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->out_);
  }

  if (has_time()) {
    // required int64 time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  return total_size;
}
size_t transaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transaction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string versign = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->versign());

    // required string pubkey = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pubkey());

    // required string txhash = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->txhash());

    // required .output out = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->out_);

    // required int64 time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .input in = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->in_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->in(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void transaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:transaction)
  GOOGLE_DCHECK_NE(&from, this);
  const transaction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const transaction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:transaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:transaction)
    MergeFrom(*source);
  }
}

void transaction::MergeFrom(const transaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:transaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  in_.MergeFrom(from.in_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_versign();
      versign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.versign_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_pubkey();
      pubkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pubkey_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_txhash();
      txhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txhash_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_out()->::output::MergeFrom(from.out());
    }
    if (cached_has_bits & 0x00000010u) {
      time_ = from.time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void transaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void transaction::CopyFrom(const transaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool transaction::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->in())) return false;
  if (has_out()) {
    if (!this->out_->IsInitialized()) return false;
  }
  return true;
}

void transaction::Swap(transaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void transaction::InternalSwap(transaction* other) {
  using std::swap;
  in_.InternalSwap(&other->in_);
  versign_.Swap(&other->versign_);
  pubkey_.Swap(&other->pubkey_);
  txhash_.Swap(&other->txhash_);
  swap(out_, other->out_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata transaction::GetMetadata() const {
  protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void blockheader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int blockheader::kTimeFieldNumber;
const int blockheader::kNonceFieldNumber;
const int blockheader::kMerklerootFieldNumber;
const int blockheader::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

blockheader::blockheader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_block_2eproto::InitDefaultsblockheader();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:blockheader)
}
blockheader::blockheader(const blockheader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  merkleroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_merkleroot()) {
    merkleroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merkleroot_);
  }
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_target()) {
    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&nonce_) -
    reinterpret_cast<char*>(&time_)) + sizeof(nonce_));
  // @@protoc_insertion_point(copy_constructor:blockheader)
}

void blockheader::SharedCtor() {
  _cached_size_ = 0;
  merkleroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nonce_) -
      reinterpret_cast<char*>(&time_)) + sizeof(nonce_));
}

blockheader::~blockheader() {
  // @@protoc_insertion_point(destructor:blockheader)
  SharedDtor();
}

void blockheader::SharedDtor() {
  merkleroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void blockheader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* blockheader::descriptor() {
  ::protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const blockheader& blockheader::default_instance() {
  ::protobuf_block_2eproto::InitDefaultsblockheader();
  return *internal_default_instance();
}

blockheader* blockheader::New(::google::protobuf::Arena* arena) const {
  blockheader* n = new blockheader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void blockheader::Clear() {
// @@protoc_insertion_point(message_clear_start:blockheader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!merkleroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*merkleroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!target_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*target_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nonce_) -
        reinterpret_cast<char*>(&time_)) + sizeof(nonce_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool blockheader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:blockheader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 nonce = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_nonce();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string merkleroot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_merkleroot()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->merkleroot().data(), static_cast<int>(this->merkleroot().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "blockheader.merkleroot");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string target = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->target().data(), static_cast<int>(this->target().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "blockheader.target");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:blockheader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:blockheader)
  return false;
#undef DO_
}

void blockheader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:blockheader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 time = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time(), output);
  }

  // required int64 nonce = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->nonce(), output);
  }

  // required string merkleroot = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->merkleroot().data(), static_cast<int>(this->merkleroot().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "blockheader.merkleroot");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->merkleroot(), output);
  }

  // required string target = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "blockheader.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->target(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:blockheader)
}

::google::protobuf::uint8* blockheader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:blockheader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 time = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time(), target);
  }

  // required int64 nonce = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->nonce(), target);
  }

  // required string merkleroot = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->merkleroot().data(), static_cast<int>(this->merkleroot().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "blockheader.merkleroot");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->merkleroot(), target);
  }

  // required string target = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target().data(), static_cast<int>(this->target().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "blockheader.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->target(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:blockheader)
  return target;
}

size_t blockheader::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:blockheader)
  size_t total_size = 0;

  if (has_merkleroot()) {
    // required string merkleroot = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->merkleroot());
  }

  if (has_target()) {
    // required string target = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target());
  }

  if (has_time()) {
    // required int64 time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  if (has_nonce()) {
    // required int64 nonce = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nonce());
  }

  return total_size;
}
size_t blockheader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:blockheader)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string merkleroot = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->merkleroot());

    // required string target = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target());

    // required int64 time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());

    // required int64 nonce = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nonce());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void blockheader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:blockheader)
  GOOGLE_DCHECK_NE(&from, this);
  const blockheader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const blockheader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:blockheader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:blockheader)
    MergeFrom(*source);
  }
}

void blockheader::MergeFrom(const blockheader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:blockheader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_merkleroot();
      merkleroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merkleroot_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_target();
      target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
    }
    if (cached_has_bits & 0x00000004u) {
      time_ = from.time_;
    }
    if (cached_has_bits & 0x00000008u) {
      nonce_ = from.nonce_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void blockheader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:blockheader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void blockheader::CopyFrom(const blockheader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:blockheader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool blockheader::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void blockheader::Swap(blockheader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void blockheader::InternalSwap(blockheader* other) {
  using std::swap;
  merkleroot_.Swap(&other->merkleroot_);
  target_.Swap(&other->target_);
  swap(time_, other->time_);
  swap(nonce_, other->nonce_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata blockheader::GetMetadata() const {
  protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void block::InitAsDefaultInstance() {
  ::_block_default_instance_._instance.get_mutable()->header_ = const_cast< ::blockheader*>(
      ::blockheader::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int block::kHeaderFieldNumber;
const int block::kTxsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

block::block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_block_2eproto::InitDefaultsblock();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:block)
}
block::block(const block& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      txs_(from.txs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::blockheader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:block)
}

void block::SharedCtor() {
  _cached_size_ = 0;
  header_ = NULL;
}

block::~block() {
  // @@protoc_insertion_point(destructor:block)
  SharedDtor();
}

void block::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void block::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* block::descriptor() {
  ::protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const block& block::default_instance() {
  ::protobuf_block_2eproto::InitDefaultsblock();
  return *internal_default_instance();
}

block* block::New(::google::protobuf::Arena* arena) const {
  block* n = new block;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void block::Clear() {
// @@protoc_insertion_point(message_clear_start:block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(header_ != NULL);
    header_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:block)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .blockheader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .transaction txs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_txs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:block)
  return false;
#undef DO_
}

void block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .blockheader header = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .transaction txs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->txs(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:block)
}

::google::protobuf::uint8* block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .blockheader header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated .transaction txs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->txs(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:block)
  return target;
}

size_t block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:block)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .blockheader header = 1;
  if (has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }
  // repeated .transaction txs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->txs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->txs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:block)
  GOOGLE_DCHECK_NE(&from, this);
  const block* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:block)
    MergeFrom(*source);
  }
}

void block::MergeFrom(const block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  txs_.MergeFrom(from.txs_);
  if (from.has_header()) {
    mutable_header()->::blockheader::MergeFrom(from.header());
  }
}

void block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void block::CopyFrom(const block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool block::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->txs())) return false;
  if (has_header()) {
    if (!this->header_->IsInitialized()) return false;
  }
  return true;
}

void block::Swap(block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void block::InternalSwap(block* other) {
  using std::swap;
  txs_.InternalSwap(&other->txs_);
  swap(header_, other->header_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata block::GetMetadata() const {
  protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
